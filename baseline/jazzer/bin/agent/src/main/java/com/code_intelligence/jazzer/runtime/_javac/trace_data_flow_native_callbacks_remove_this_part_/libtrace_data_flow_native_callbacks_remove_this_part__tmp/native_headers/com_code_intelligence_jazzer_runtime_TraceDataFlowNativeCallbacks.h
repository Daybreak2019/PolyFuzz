/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_code_intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks */

#ifndef _Included_com_code_intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks
#define _Included_com_code_intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_code_intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks
 * Method:    traceMemcmp
 * Signature: ([B[BII)V
 */
JNIEXPORT void JNICALL Java_com_code_1intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks_traceMemcmp
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jint, jint);

/*
 * Class:     com_code_intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks
 * Method:    handleLibraryLoad
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_code_1intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks_handleLibraryLoad
  (JNIEnv *, jclass);

/*
 * Class:     com_code_intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks
 * Method:    traceStrstr0
 * Signature: ([BI)V
 */
JNIEXPORT void JNICALL Java_com_code_1intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks_traceStrstr0
  (JNIEnv *, jclass, jbyteArray, jint);

/*
 * Class:     com_code_intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks
 * Method:    traceCmpInt
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_com_code_1intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks_traceCmpInt
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_code_intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks
 * Method:    traceCmpIntWithPc
 * Signature: (III)V
 */
JNIEXPORT void JNICALL Java_com_code_1intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks_traceCmpIntWithPc
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     com_code_intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks
 * Method:    traceConstCmpInt
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_com_code_1intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks_traceConstCmpInt
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_code_intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks
 * Method:    traceConstCmpIntWithPc
 * Signature: (III)V
 */
JNIEXPORT void JNICALL Java_com_code_1intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks_traceConstCmpIntWithPc
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     com_code_intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks
 * Method:    traceCmpLong
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_code_1intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks_traceCmpLong
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_code_intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks
 * Method:    traceCmpLongWithPc
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_com_code_1intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks_traceCmpLongWithPc
  (JNIEnv *, jclass, jlong, jlong, jint);

/*
 * Class:     com_code_intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks
 * Method:    traceSwitch
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_com_code_1intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks_traceSwitch
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     com_code_intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks
 * Method:    traceSwitchWithPc
 * Signature: (J[JI)V
 */
JNIEXPORT void JNICALL Java_com_code_1intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks_traceSwitchWithPc
  (JNIEnv *, jclass, jlong, jlongArray, jint);

/*
 * Class:     com_code_intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks
 * Method:    traceDivInt
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_code_1intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks_traceDivInt
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_code_intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks
 * Method:    traceDivIntWithPc
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_com_code_1intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks_traceDivIntWithPc
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_code_intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks
 * Method:    traceDivLong
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_code_1intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks_traceDivLong
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_code_intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks
 * Method:    traceDivLongWithPc
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_code_1intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks_traceDivLongWithPc
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_code_intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks
 * Method:    traceGep
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_code_1intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks_traceGep
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_code_intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks
 * Method:    traceGepWithPc
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_code_1intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks_traceGepWithPc
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_code_intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks
 * Method:    tracePcIndir0
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_com_code_1intelligence_jazzer_runtime_TraceDataFlowNativeCallbacks_tracePcIndir0
  (JNIEnv *, jclass, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
